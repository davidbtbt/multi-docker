{"ast":null,"code":"var _jsxFileName = \"/home/dbonilla/docker/complex/client/src/Fib.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nclass Fib extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      seenIndices: [],\n      values: {},\n      index: ''\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      await axios.post('/api/values', {\n        index: this.state.index\n      });\n      this.setState({\n        index: ''\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.fetchValues();\n    this.fetchIndexes();\n  }\n\n  async fetchValues() {\n    const values = await axios.get('/api/values/current');\n    this.setState({\n      values: values.data\n    });\n  }\n\n  async fetchIndexes() {\n    const seenIndexes = await axios.get('/api/value/all');\n    this.setState({\n      seenIndexes: seenIndexes.data\n    });\n  }\n\n  renderSeenIndices() {\n    //extracts just a list of numbers.\n    return this.state.seenIndices.map(({\n      number\n    }) => {\n      return number;\n    });\n  }\n\n  renderValues() {\n    const entries = [];\n\n    for (let key in this.state.values) {\n      entries.push(React.createElement(\"div\", {\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"For Index \", key, \" I calculate \", this.state.values[key]));\n    }\n\n    return entries;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Enter your index:\"), React.createElement(\"input\", {\n      value: this.state.index,\n      onChange: event => this.setState({\n        index: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Submit\")), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Indices I have seen:\"), this.renderSeenIndices(), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Calculated Values:\"), this.renderValues());\n  }\n\n}\n\nexport default Fib;","map":{"version":3,"sources":["/home/dbonilla/docker/complex/client/src/Fib.js"],"names":["React","Component","axios","Fib","state","seenIndices","values","index","handleSubmit","event","preventDefault","post","setState","componentDidMount","fetchValues","fetchIndexes","get","data","seenIndexes","renderSeenIndices","map","number","renderValues","entries","key","push","render","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC3BG,KAD2B,GACnB;AACPC,MAAAA,WAAW,EAAE,EADN;AAEPC,MAAAA,MAAM,EAAE,EAFD;AAGPC,MAAAA,KAAK,EAAE;AAHA,KADmB;;AAAA,SAwB3BC,YAxB2B,GAwBZ,MAAMC,KAAN,IAAe;AAC7BA,MAAAA,KAAK,CAACC,cAAN;AAEA,YAAMR,KAAK,CAACS,IAAN,CAAW,aAAX,EAA0B;AAC/BJ,QAAAA,KAAK,EAAE,KAAKH,KAAL,CAAWG;AADa,OAA1B,CAAN;AAGA,WAAKK,QAAL,CAAc;AAAEL,QAAAA,KAAK,EAAE;AAAT,OAAd;AACA,KA/B0B;AAAA;;AAO3BM,EAAAA,iBAAiB,GAAG;AACnB,SAAKC,WAAL;AACA,SAAKC,YAAL;AACA;;AAED,QAAMD,WAAN,GAAoB;AACnB,UAAMR,MAAM,GAAG,MAAMJ,KAAK,CAACc,GAAN,CAAU,qBAAV,CAArB;AACA,SAAKJ,QAAL,CAAc;AAAEN,MAAAA,MAAM,EAAEA,MAAM,CAACW;AAAjB,KAAd;AACA;;AAED,QAAMF,YAAN,GAAqB;AACpB,UAAMG,WAAW,GAAG,MAAMhB,KAAK,CAACc,GAAN,CAAU,gBAAV,CAA1B;AACA,SAAKJ,QAAL,CAAc;AACbM,MAAAA,WAAW,EAAEA,WAAW,CAACD;AADZ,KAAd;AAGA;;AAWDE,EAAAA,iBAAiB,GAAG;AACnB;AACA,WAAO,KAAKf,KAAL,CAAWC,WAAX,CAAuBe,GAAvB,CAA2B,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAgB;AACjD,aAAOA,MAAP;AACA,KAFM,CAAP;AAGA;;AAEDC,EAAAA,YAAY,GAAG;AACd,UAAMC,OAAO,GAAG,EAAhB;;AACA,SAAK,IAAIC,GAAT,IAAgB,KAAKpB,KAAL,CAAWE,MAA3B,EAAmC;AAClCiB,MAAAA,OAAO,CAACE,IAAR,CACC;AAAK,QAAA,GAAG,EAAED,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACYA,GADZ,mBAC8B,KAAKpB,KAAL,CAAWE,MAAX,CAAkBkB,GAAlB,CAD9B,CADD;AAKA;;AACD,WAAOD,OAAP;AACA;;AAEDG,EAAAA,MAAM,GAAG;AACR,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAM,MAAA,QAAQ,EAAE,KAAKlB,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADD,EAEC;AAAO,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWG,KAAzB;AAAgC,MAAA,QAAQ,EAAEE,KAAK,IAAI,KAAKG,QAAL,CAAc;AAAEL,QAAAA,KAAK,EAAEE,KAAK,CAACkB,MAAN,CAAaC;AAAtB,OAAd,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,EAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHD,CADD,EAOC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAPD,EAQE,KAAKT,iBAAL,EARF,EAUC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAVD,EAWE,KAAKG,YAAL,EAXF,CADD;AAeA;;AApE0B;;AAuE5B,eAAenB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass Fib extends Component {\n\tstate = {\n\t\tseenIndices: [],\n\t\tvalues: {},\n\t\tindex: ''\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.fetchValues();\n\t\tthis.fetchIndexes();\n\t}\n\n\tasync fetchValues() {\n\t\tconst values = await axios.get('/api/values/current');\n\t\tthis.setState({ values: values.data });\n\t}\n\n\tasync fetchIndexes() {\n\t\tconst seenIndexes = await axios.get('/api/value/all');\n\t\tthis.setState({\n\t\t\tseenIndexes: seenIndexes.data\n\t\t});\n\t}\n\n\thandleSubmit = async event => {\n\t\tevent.preventDefault();\n\n\t\tawait axios.post('/api/values', {\n\t\t\tindex: this.state.index\n\t\t});\n\t\tthis.setState({ index: '' });\n\t};\n\n\trenderSeenIndices() {\n\t\t//extracts just a list of numbers.\n\t\treturn this.state.seenIndices.map(({ number }) => {\n\t\t\treturn number;\n\t\t});\n\t}\n\n\trenderValues() {\n\t\tconst entries = [];\n\t\tfor (let key in this.state.values) {\n\t\t\tentries.push(\n\t\t\t\t<div key={key}>\n\t\t\t\t\tFor Index {key} I calculate {this.state.values[key]}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\treturn entries;\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\t\t<label>Enter your index:</label>\n\t\t\t\t\t<input value={this.state.index} onChange={event => this.setState({ index: event.target.value })} />\n\t\t\t\t\t<button>Submit</button>\n\t\t\t\t</form>\n\n\t\t\t\t<h3>Indices I have seen:</h3>\n\t\t\t\t{this.renderSeenIndices()}\n\n\t\t\t\t<h3>Calculated Values:</h3>\n\t\t\t\t{this.renderValues()}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Fib;"]},"metadata":{},"sourceType":"module"}